{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Home What this repo is for? Starting from Spring 2022, BLIS workgroup decides to move all documentation regarding BLIS into one place for accessibility, maintainability and readability. In the current plan, this repo will includes following assets: User Guide Frequently Asked Questions Developer guide This webpage also allows you to conduct search through the docs. Contributing to this repo: Recommendation readings: We are maintaining this webpage via github page . Using mkdocs to generate static sites from markdown files under /docs . You can learn more from this tutorial . Develop & deploy steps: If you are contributing to this repo, please follow the steps of: - Add your documentations under /docs - Before submitting, you can test the new changes offline running mkdocs serve . This will serve the site in your localhost. Default accessible at port 8000 . - After merge into the main, you can run mkdocs gh-deploy --force under the main branch. This will deploy the changes to the actual github page website.","title":"Home"},{"location":"#home","text":"","title":"Home"},{"location":"#what-this-repo-is-for","text":"Starting from Spring 2022, BLIS workgroup decides to move all documentation regarding BLIS into one place for accessibility, maintainability and readability. In the current plan, this repo will includes following assets: User Guide Frequently Asked Questions Developer guide This webpage also allows you to conduct search through the docs.","title":"What this repo is for?"},{"location":"#contributing-to-this-repo","text":"","title":"Contributing to this repo:"},{"location":"#recommendation-readings","text":"We are maintaining this webpage via github page . Using mkdocs to generate static sites from markdown files under /docs . You can learn more from this tutorial .","title":"Recommendation readings:"},{"location":"#develop-deploy-steps","text":"If you are contributing to this repo, please follow the steps of: - Add your documentations under /docs - Before submitting, you can test the new changes offline running mkdocs serve . This will serve the site in your localhost. Default accessible at port 8000 . - After merge into the main, you can run mkdocs gh-deploy --force under the main branch. This will deploy the changes to the actual github page website.","title":"Develop &amp; deploy steps:"},{"location":"BLIS_User_Guide_v3.8/","text":"C4G BLIS User Guide Version 3.8 User Instruction Manual Rev 3.8 C4G Basic Laboratory Information System is a collaboration between Computing-for-Good (C4G) at Georgia Tech, the CDC, and participating PEPFAR countries. Table of contents Introduction to C4G BLIS BLIS Start-Up Guide Installing BLIS For Windows Starting BLIS Stopping BLIS Roles in BLIS Director Overview Manager Overview Lab Configuration Test Catalog Reports Backup Data Technician Overview Glossary Introduction to C4G BLIS The Basic Laboratory Information System, BLIS, is a freeware Web-based system that can be installed in a local, district, or national laboratory. It is a tool that can help to standardize data, which improves the ability to run useful reports and can both give a realistic picture of laboratory services and assist with staff and budget planning. With enough data, BLIS can be used to track disease prevalence over time. Features of BLIS include: - One-time entry of each unique patient - Standardization of data collected (allowable entries for specimen type, test type, patient data, reagents are set at MOH level and then entered consistently throughout a country) - Customization to a country\u2019s needs - Ability to track lab supplies such as test kits, reagents - Ability to run reports as specified by a country - Automatic alerting of data values that may be out of range(reference ranges and panic values are set at the regional or national level) - Daily logs to be reviewed for data verification - Simple data backup to a zipped file - [NEW] BLIS running on a cloud provider - [NEW] Manual data backup to a version of BLIS running on a remote server As with any properly implemented electronic record system, BLIS may be found over time to improve data accuracy and reduce costs in laboratories. Benefits already seen in labs using BLIS: - Reduced burden for technicians, as results are available soon after testing - Improved consistency of data entry - Ability to view patient history and track samples - Ability to aggregate data and analyze data patterns and trends at a regional or national level - Printed patient records in place of handwritten records - Printed daily logs that make the reports look like the paper forms used in the laboratory BLIS Start-Up Guide There are three versions of BLIS that currently exists. Firstly, BLIS on Windows was the original version developed for end-users. Stand-alone versions, updates, and packaged content are still publicly available on the C4G BLIS home page, accessible here . Secondly, BLIS on the Cloud is a newly deployed version of BLIS that is capable of running on a Cloud Provider, and was originally intended to be used as an online backup database for aggregating country-wide data for analysis. For instructions on installing BLIS on the Cloud , please see the Developer's Documentation. Thirdly, BLIS in a Devcontainer is an instantiation of BLIS that allows for developers to specify the development environment, and is intended to be used by developers only. For instructions on installing BLIS in a Devcontainer , please see the Developer's Documentation. BLIS For Windows BLIS was originally developed to run on Windows using a discontinued project called Server2Go. This packages Apache2, MySQL, PHP, and Firefox together into a package that can be run all at once on a desktop computer. BLIS on Windows is the primary way that end-users are using BLIS, but can and should be used by developers to test updates. Prerequisites Installing command-line tools can be done with a Windows package manager such as Scoop . git Instructions for Installation Navigate to the C4G BLIS home page . B. Click on the Download tab in the top menu bar, then click Download BLIS v3.8 Complete . Follow all instructions on the Download page. Starting BLIS Double-click on the BLIS.exe file. A page requesting login information will appear. Enter in your login credentials. Stopping BLIS After your session is complete, click the Logout button in the top right pane of the screen. A popup window will appear where you can rate your experience with C4G BLIS and write any comments you may have. After entering your feedback, press the Submit button to fully logout. Alternatively, you may press Skip to logout immediately without providing any feedback. If you do not wish to logout, press CLOSE . Roles in BLIS There are three roles in BLIS. Firstly, Directors (also referenced to as country directors) are a role held by a single individual at the management level of each country. The roles of Directors are to oversee many laboratories using BLIS, summarize data trends from uploaded patient data from across the country, and work with C4G developers to provide user feedback for future versions of BLIS. Secondly, Managers (also referenced as admin users) are the managerial supervisors of laboratories. The roles of Managers are to maintain the user permissions to individual labs and alter individual lab configurations as needed. Thirdly, Technicians are the majority of BLIS users. The role of Technicians is to enter in and verify patient data. Director Overview Manager Overview The manager interface allows the Manager to do the following: 1. Add, edit, and delete users 2. Change the laboratory configuration settings in the Lab Configuration tab in the top menu bar 3. Generate and print reports in the Reports tab in the top menu bar Lab Configuration The laboratory configuration can be changed by Managers or admin users of BLIS. Here, you can change how reports are generated, what patient data is collected, as well as various other settings. In general, laboratory settings are usually initialized by the Country Director, but can be modified to suit individual labs' needs. The menu selection for the Lab Configuration tab - accessible in the top menu bar - is as follows: 1. Summary 2. Tests 3. Search 4. Reports 5. Results 6. Sites 7. Inventory 8. Barcode Settings 9. Billing 10. User Accounts 11. Registration Fields 12. Doctor Registration Fields 13. Modify Language 14. Setup Local Network 15. BLIS Online 16. External Interface 17. Revert to Backup 18. Manage Backup Keys 19. Export Configuration Summary The Summary page displays information about the laboratory. Specific information includes the Facility Name, Location, Lab Manager, available Specimen Types, available Test Types, and Technician Accounts allocated to the specific laboratory. Tests The Tests page has a drop down menu that opens up to reveal three different options: Specimen/Test Types , Target TAT , and Results Interpretation . Specimen/Test Types The Specimen/Test Types page allows you to set the specimen and test types as appropriate for your country. Click Show to reveal hidden panes and Hide to close the panes. Check the box for each specimen type collected or test done at this facility, and click Submit to save. Target TAT The Target TAT page displays turnaround times for tests. To enter or change turnaround time, click Edit . The number and unit (such as \u201c24 hours\u201d) change to a text field and a drop-down list. Enter the desired number and choose Hours or Days . When finished, click the Submit button to save changes, or Cancel to discard changes. These options are below the list. Results Interpretation The Results Interpretation page allows you to specify the interpretation for multiple ranges of values for each test type. To view or edit an existing test\u2019s result, choose the test type from the drop-down list and click the Search button. The current interpretation appears. Edit using the text boxes. To add a new range to the list, click the Add Another link and enter data in the text boxes. Click the Submit button to save changes, or Cancel to discard them. Search The Search page allows you to configure what results are displayed for each patient when a search is executed. It also allows you to change how many results are displayed on each page. Reports The Reports page has a drop down menu that opens up to reveal seven different options: Infection Report , Test/Specimen Grouped Reports , Daily Report Settings , Enable/Disable Test Reports , Test Report Configuration , Worksheet , and Order Patient Fields . Infection Report The Infection Report page generates an aggregate report of laboratory test results for a particular period for one or all lab sections. The tests listed in the report are the ones checked to include on the Specimen/Test Types page. Click Edit to make changes to the details reported. When finished, click Submit button to save changes, Preview to view the report, or Cancel to discard changes. Test/Specimen Grouped Reports The Test/Specimen Grouped Reports page allows you to set the Test Count (Grouped) Report settings and the Specimen Count (Grouped) Report settings. Click Edit to change settings. When finished, click the Submit button to save changes, or Cancel to discard changes. Daily Report Settings The Daily Report Settings page allows you to set the layout of the Patient Report , Daily Log - Specimens , and Daily Log - Patients . Use the drop-down to select the report type, then click Search . Check or un-check boxes to show or hide patient, specimen, and test information. If desired, you can upload a .jpg logo file to appear on the report. When finished, click the Submit button to save changes, or Cancel to discard changes. These options are below the list. Enable/Disable Test Results The Enable/Disable Test Results page allows you to enable or disable specific tests. Items on the left side are disabled; move the test items to the right side to enable them. When finished, click the Submit button to save changes, or Cancel to discard changes. Test Report Configuration The Test Report Configuration page allows you to visualize your enabled test configurations. Use the drop-down to select the test type from the enabled test list, then click Search . Click Edit to edit the configuration of the reported test data. Check or un-check boxes to show or hide patient, specimen, and test information. When finished, click the Submit button to save changes, or Cancel to discard changes Worksheet The Worksheet page allows you to create templates for gather patient data in the lab. In lab settings where data are not entered at the point of service, the data entry staff can enter the laboratory's patient information and ordered tests, then print the worksheet so that lab technicians can write test results and other data to be entered into BLIS. Select the Lab Section and Test Type and click Search to edit the report format. To edit a custom report, click Edit to the right of the report. To create a new custom worksheet, click the Add Custom Worksheet link at the bottom of the list. Results The Results page allows you to edit the parameters displayed in the batch results page. Currently, the editable data is limited to Patient information. Sites The Sites page allows you to add, modify, or remove specimen collection sites to the laboratory records. When first spawning a laboratory, only one site - the default site - will exist. Additional information about the site can be provided in the textboxes - currently, BLIS supports adding in District and Region information. To add another site, click on the Add Another hyperlink at the top and fill in textbox with the new site name, then click Submit . To go back, click Cancel . Inventory The Inventory page is a list of any existing reagents being tracked in BLIS. To add another, click the Add Item link above the list and input the name, unit of measurement associated with the reagent, and any miscellaneous remarks about the reagent. After pressing Submit , don't forget to add the item's stock. On the Current Inventory page, you can Log Stock Usage , Add Stock , or Edit Details . Barcode Settings The Barcode Settings page allows you to configure the settings for barcode formats. Click on the Page Help for more details. After changing the settings, click Submit to save your edits. User Accounts Registration Fields Doctor Registration Fields Modify Language Setup Local Network BLIS Online The BLIS Online page allows you to enter an IP address of a BLIS on the Cloud server. For more details about BLIS on the Cloud and how to create your own instantiation, please read the Developer's Documentation. Please enter the IP address into the text box and click Submit . A message stating \"BLIS Cloud hostname updated successfully!\" will pop up if submitted correctly. External Interface Revert to Backup Manage Backup Keys The Manage Backup Keys page allows you to create, manage, or delete key pairs in order to encrypt laboratory backup data. Encrypting laboratory backup data with a unique key-pair ensures that only the personnel with the correct private key will be able to successfully decrypt the encrypted data with the correlated public key. The home screen of the Manage Backup Keys page displays the list of currently active public keys. In the example image below, only one public key is available for use, with a key alias of \"my_pubkey\". Disable Encrypted Backups Toggle this button to disable or enable encrypted backups. It is recommended to enable encrypted backups to protect private patient information. Download Public Key This button opens a popup window prompting the user to download a public key. This key should be saved onto the computer. Add Key Alias To add a new public key, click Add Key Alias . Fill free to enter in any key alias names here. We recommend entering in some identifying information that describes the origin of the public key. For example, if the public key was provided by the country director, the key alias name could be \"country_director_pubkey\". To upload the public key, click Browse and use the File Upload navigational controls to select the desired public key (ending in a .blis file extension). After selecting the correct public key, click Add to add the public key to the list of currently active public keys, or Cancel to discard changes. Export Configuration Test Catalog Reports Backup Data The Backup Data feature was created for two reasons - to revert to a previously backed-up copy in cases of system failure, but also to create a backup file of the current laboratory patient data for uploading to a BLIS on Cloud version. For example, one intended use of the second scenario would be to upload the current laboratory data to the director's instantiation of BLIS. A conglomeration of multiple labs' data would permit the director to visualize larger trends in the healthcare data across several laboratories. This would aid the director in understanding the needs of individual labs, and permit them to mobilize aid catered to the specific needs of each laboratories. The below image is the default view of the Backup Data page. Backup Data with Pre-Existing Key If a public key has already been registered to the personnel account through the Lab Configuration > Manage Backup Keys functionality, then the key should appear in the drop-down menu. In the image below, my_pubkey is a pre-existing public key that had been previously registered. Please select the key from the drop-down menu. Backup Data without Pre-Existing Key If the desired public key has not already been registered to the account, then please select New Key... from the drop-down menu. Two new boxes should appear. Give the key a name (recommend either the lab name or lab ID), and click on the Browse button. Find the public key that was previously downloaded onto your computer and select it to upload. After selecting the public key of choice, please choose the desired backup (General or Anonymized) and then click Backup to trigger the data backup. A new page should pop up, confirming that the backup was successful. Please click the Download Zip hyperlink to download the zipped file to your Desktop. Additionally, if a Backup IP Address was previously set in Lab Configuration > BLIS Online page, a copy of the backup will be sent to the BLIS version hosted on the specified IP Address. Technician Overview","title":"C4G BLIS User Guide Version 3.8"},{"location":"BLIS_User_Guide_v3.8/#c4g-blis-user-guide-version-38","text":"","title":"C4G BLIS User Guide Version 3.8"},{"location":"BLIS_User_Guide_v3.8/#user-instruction-manual-rev-38","text":"C4G Basic Laboratory Information System is a collaboration between Computing-for-Good (C4G) at Georgia Tech, the CDC, and participating PEPFAR countries.","title":"User Instruction Manual Rev 3.8"},{"location":"BLIS_User_Guide_v3.8/#table-of-contents","text":"Introduction to C4G BLIS BLIS Start-Up Guide Installing BLIS For Windows Starting BLIS Stopping BLIS Roles in BLIS Director Overview Manager Overview Lab Configuration Test Catalog Reports Backup Data Technician Overview Glossary","title":"Table of contents"},{"location":"BLIS_User_Guide_v3.8/#introduction-to-c4g-blis","text":"The Basic Laboratory Information System, BLIS, is a freeware Web-based system that can be installed in a local, district, or national laboratory. It is a tool that can help to standardize data, which improves the ability to run useful reports and can both give a realistic picture of laboratory services and assist with staff and budget planning. With enough data, BLIS can be used to track disease prevalence over time. Features of BLIS include: - One-time entry of each unique patient - Standardization of data collected (allowable entries for specimen type, test type, patient data, reagents are set at MOH level and then entered consistently throughout a country) - Customization to a country\u2019s needs - Ability to track lab supplies such as test kits, reagents - Ability to run reports as specified by a country - Automatic alerting of data values that may be out of range(reference ranges and panic values are set at the regional or national level) - Daily logs to be reviewed for data verification - Simple data backup to a zipped file - [NEW] BLIS running on a cloud provider - [NEW] Manual data backup to a version of BLIS running on a remote server As with any properly implemented electronic record system, BLIS may be found over time to improve data accuracy and reduce costs in laboratories. Benefits already seen in labs using BLIS: - Reduced burden for technicians, as results are available soon after testing - Improved consistency of data entry - Ability to view patient history and track samples - Ability to aggregate data and analyze data patterns and trends at a regional or national level - Printed patient records in place of handwritten records - Printed daily logs that make the reports look like the paper forms used in the laboratory","title":"Introduction to C4G BLIS "},{"location":"BLIS_User_Guide_v3.8/#blis-start-up-guide","text":"There are three versions of BLIS that currently exists. Firstly, BLIS on Windows was the original version developed for end-users. Stand-alone versions, updates, and packaged content are still publicly available on the C4G BLIS home page, accessible here . Secondly, BLIS on the Cloud is a newly deployed version of BLIS that is capable of running on a Cloud Provider, and was originally intended to be used as an online backup database for aggregating country-wide data for analysis. For instructions on installing BLIS on the Cloud , please see the Developer's Documentation. Thirdly, BLIS in a Devcontainer is an instantiation of BLIS that allows for developers to specify the development environment, and is intended to be used by developers only. For instructions on installing BLIS in a Devcontainer , please see the Developer's Documentation.","title":"BLIS Start-Up Guide "},{"location":"BLIS_User_Guide_v3.8/#blis-for-windows","text":"BLIS was originally developed to run on Windows using a discontinued project called Server2Go. This packages Apache2, MySQL, PHP, and Firefox together into a package that can be run all at once on a desktop computer. BLIS on Windows is the primary way that end-users are using BLIS, but can and should be used by developers to test updates.","title":"BLIS For Windows "},{"location":"BLIS_User_Guide_v3.8/#prerequisites","text":"Installing command-line tools can be done with a Windows package manager such as Scoop . git","title":"Prerequisites"},{"location":"BLIS_User_Guide_v3.8/#instructions-for-installation","text":"Navigate to the C4G BLIS home page . B. Click on the Download tab in the top menu bar, then click Download BLIS v3.8 Complete . Follow all instructions on the Download page.","title":"Instructions for Installation"},{"location":"BLIS_User_Guide_v3.8/#starting-blis","text":"Double-click on the BLIS.exe file. A page requesting login information will appear. Enter in your login credentials.","title":"Starting BLIS "},{"location":"BLIS_User_Guide_v3.8/#stopping-blis","text":"After your session is complete, click the Logout button in the top right pane of the screen. A popup window will appear where you can rate your experience with C4G BLIS and write any comments you may have. After entering your feedback, press the Submit button to fully logout. Alternatively, you may press Skip to logout immediately without providing any feedback. If you do not wish to logout, press CLOSE .","title":"Stopping BLIS "},{"location":"BLIS_User_Guide_v3.8/#roles-in-blis","text":"There are three roles in BLIS. Firstly, Directors (also referenced to as country directors) are a role held by a single individual at the management level of each country. The roles of Directors are to oversee many laboratories using BLIS, summarize data trends from uploaded patient data from across the country, and work with C4G developers to provide user feedback for future versions of BLIS. Secondly, Managers (also referenced as admin users) are the managerial supervisors of laboratories. The roles of Managers are to maintain the user permissions to individual labs and alter individual lab configurations as needed. Thirdly, Technicians are the majority of BLIS users. The role of Technicians is to enter in and verify patient data.","title":"Roles in BLIS "},{"location":"BLIS_User_Guide_v3.8/#director-overview","text":"","title":"Director Overview "},{"location":"BLIS_User_Guide_v3.8/#manager-overview","text":"The manager interface allows the Manager to do the following: 1. Add, edit, and delete users 2. Change the laboratory configuration settings in the Lab Configuration tab in the top menu bar 3. Generate and print reports in the Reports tab in the top menu bar","title":"Manager Overview "},{"location":"BLIS_User_Guide_v3.8/#lab-configuration","text":"The laboratory configuration can be changed by Managers or admin users of BLIS. Here, you can change how reports are generated, what patient data is collected, as well as various other settings. In general, laboratory settings are usually initialized by the Country Director, but can be modified to suit individual labs' needs. The menu selection for the Lab Configuration tab - accessible in the top menu bar - is as follows: 1. Summary 2. Tests 3. Search 4. Reports 5. Results 6. Sites 7. Inventory 8. Barcode Settings 9. Billing 10. User Accounts 11. Registration Fields 12. Doctor Registration Fields 13. Modify Language 14. Setup Local Network 15. BLIS Online 16. External Interface 17. Revert to Backup 18. Manage Backup Keys 19. Export Configuration","title":"Lab Configuration "},{"location":"BLIS_User_Guide_v3.8/#summary","text":"The Summary page displays information about the laboratory. Specific information includes the Facility Name, Location, Lab Manager, available Specimen Types, available Test Types, and Technician Accounts allocated to the specific laboratory.","title":"Summary "},{"location":"BLIS_User_Guide_v3.8/#tests","text":"The Tests page has a drop down menu that opens up to reveal three different options: Specimen/Test Types , Target TAT , and Results Interpretation .","title":"Tests "},{"location":"BLIS_User_Guide_v3.8/#specimentest-types","text":"The Specimen/Test Types page allows you to set the specimen and test types as appropriate for your country. Click Show to reveal hidden panes and Hide to close the panes. Check the box for each specimen type collected or test done at this facility, and click Submit to save.","title":"Specimen/Test Types"},{"location":"BLIS_User_Guide_v3.8/#target-tat","text":"The Target TAT page displays turnaround times for tests. To enter or change turnaround time, click Edit . The number and unit (such as \u201c24 hours\u201d) change to a text field and a drop-down list. Enter the desired number and choose Hours or Days . When finished, click the Submit button to save changes, or Cancel to discard changes. These options are below the list.","title":"Target TAT"},{"location":"BLIS_User_Guide_v3.8/#results-interpretation","text":"The Results Interpretation page allows you to specify the interpretation for multiple ranges of values for each test type. To view or edit an existing test\u2019s result, choose the test type from the drop-down list and click the Search button. The current interpretation appears. Edit using the text boxes. To add a new range to the list, click the Add Another link and enter data in the text boxes. Click the Submit button to save changes, or Cancel to discard them.","title":"Results Interpretation"},{"location":"BLIS_User_Guide_v3.8/#search","text":"The Search page allows you to configure what results are displayed for each patient when a search is executed. It also allows you to change how many results are displayed on each page.","title":"Search "},{"location":"BLIS_User_Guide_v3.8/#reports","text":"The Reports page has a drop down menu that opens up to reveal seven different options: Infection Report , Test/Specimen Grouped Reports , Daily Report Settings , Enable/Disable Test Reports , Test Report Configuration , Worksheet , and Order Patient Fields .","title":"Reports "},{"location":"BLIS_User_Guide_v3.8/#infection-report","text":"The Infection Report page generates an aggregate report of laboratory test results for a particular period for one or all lab sections. The tests listed in the report are the ones checked to include on the Specimen/Test Types page. Click Edit to make changes to the details reported. When finished, click Submit button to save changes, Preview to view the report, or Cancel to discard changes.","title":"Infection Report"},{"location":"BLIS_User_Guide_v3.8/#testspecimen-grouped-reports","text":"The Test/Specimen Grouped Reports page allows you to set the Test Count (Grouped) Report settings and the Specimen Count (Grouped) Report settings. Click Edit to change settings. When finished, click the Submit button to save changes, or Cancel to discard changes.","title":"Test/Specimen Grouped Reports"},{"location":"BLIS_User_Guide_v3.8/#daily-report-settings","text":"The Daily Report Settings page allows you to set the layout of the Patient Report , Daily Log - Specimens , and Daily Log - Patients . Use the drop-down to select the report type, then click Search . Check or un-check boxes to show or hide patient, specimen, and test information. If desired, you can upload a .jpg logo file to appear on the report. When finished, click the Submit button to save changes, or Cancel to discard changes. These options are below the list.","title":"Daily Report Settings"},{"location":"BLIS_User_Guide_v3.8/#enabledisable-test-results","text":"The Enable/Disable Test Results page allows you to enable or disable specific tests. Items on the left side are disabled; move the test items to the right side to enable them. When finished, click the Submit button to save changes, or Cancel to discard changes.","title":"Enable/Disable Test Results"},{"location":"BLIS_User_Guide_v3.8/#test-report-configuration","text":"The Test Report Configuration page allows you to visualize your enabled test configurations. Use the drop-down to select the test type from the enabled test list, then click Search . Click Edit to edit the configuration of the reported test data. Check or un-check boxes to show or hide patient, specimen, and test information. When finished, click the Submit button to save changes, or Cancel to discard changes","title":"Test Report Configuration"},{"location":"BLIS_User_Guide_v3.8/#worksheet","text":"The Worksheet page allows you to create templates for gather patient data in the lab. In lab settings where data are not entered at the point of service, the data entry staff can enter the laboratory's patient information and ordered tests, then print the worksheet so that lab technicians can write test results and other data to be entered into BLIS. Select the Lab Section and Test Type and click Search to edit the report format. To edit a custom report, click Edit to the right of the report. To create a new custom worksheet, click the Add Custom Worksheet link at the bottom of the list.","title":"Worksheet"},{"location":"BLIS_User_Guide_v3.8/#results","text":"The Results page allows you to edit the parameters displayed in the batch results page. Currently, the editable data is limited to Patient information.","title":"Results "},{"location":"BLIS_User_Guide_v3.8/#sites","text":"The Sites page allows you to add, modify, or remove specimen collection sites to the laboratory records. When first spawning a laboratory, only one site - the default site - will exist. Additional information about the site can be provided in the textboxes - currently, BLIS supports adding in District and Region information. To add another site, click on the Add Another hyperlink at the top and fill in textbox with the new site name, then click Submit . To go back, click Cancel .","title":"Sites "},{"location":"BLIS_User_Guide_v3.8/#inventory","text":"The Inventory page is a list of any existing reagents being tracked in BLIS. To add another, click the Add Item link above the list and input the name, unit of measurement associated with the reagent, and any miscellaneous remarks about the reagent. After pressing Submit , don't forget to add the item's stock. On the Current Inventory page, you can Log Stock Usage , Add Stock , or Edit Details .","title":"Inventory "},{"location":"BLIS_User_Guide_v3.8/#barcode-settings","text":"The Barcode Settings page allows you to configure the settings for barcode formats. Click on the Page Help for more details. After changing the settings, click Submit to save your edits.","title":"Barcode Settings "},{"location":"BLIS_User_Guide_v3.8/#user-accounts","text":"","title":"User Accounts "},{"location":"BLIS_User_Guide_v3.8/#registration-fields","text":"","title":"Registration Fields "},{"location":"BLIS_User_Guide_v3.8/#doctor-registration-fields","text":"","title":"Doctor Registration Fields "},{"location":"BLIS_User_Guide_v3.8/#modify-language","text":"","title":"Modify Language "},{"location":"BLIS_User_Guide_v3.8/#setup-local-network","text":"","title":"Setup Local Network "},{"location":"BLIS_User_Guide_v3.8/#blis-online","text":"The BLIS Online page allows you to enter an IP address of a BLIS on the Cloud server. For more details about BLIS on the Cloud and how to create your own instantiation, please read the Developer's Documentation. Please enter the IP address into the text box and click Submit . A message stating \"BLIS Cloud hostname updated successfully!\" will pop up if submitted correctly.","title":"BLIS Online "},{"location":"BLIS_User_Guide_v3.8/#external-interface","text":"","title":"External Interface "},{"location":"BLIS_User_Guide_v3.8/#revert-to-backup","text":"","title":"Revert to Backup "},{"location":"BLIS_User_Guide_v3.8/#manage-backup-keys","text":"The Manage Backup Keys page allows you to create, manage, or delete key pairs in order to encrypt laboratory backup data. Encrypting laboratory backup data with a unique key-pair ensures that only the personnel with the correct private key will be able to successfully decrypt the encrypted data with the correlated public key. The home screen of the Manage Backup Keys page displays the list of currently active public keys. In the example image below, only one public key is available for use, with a key alias of \"my_pubkey\".","title":"Manage Backup Keys "},{"location":"BLIS_User_Guide_v3.8/#disable-encrypted-backups","text":"Toggle this button to disable or enable encrypted backups. It is recommended to enable encrypted backups to protect private patient information.","title":"Disable Encrypted Backups"},{"location":"BLIS_User_Guide_v3.8/#download-public-key","text":"This button opens a popup window prompting the user to download a public key. This key should be saved onto the computer.","title":"Download Public Key"},{"location":"BLIS_User_Guide_v3.8/#add-key-alias","text":"To add a new public key, click Add Key Alias . Fill free to enter in any key alias names here. We recommend entering in some identifying information that describes the origin of the public key. For example, if the public key was provided by the country director, the key alias name could be \"country_director_pubkey\". To upload the public key, click Browse and use the File Upload navigational controls to select the desired public key (ending in a .blis file extension). After selecting the correct public key, click Add to add the public key to the list of currently active public keys, or Cancel to discard changes.","title":"Add Key Alias"},{"location":"BLIS_User_Guide_v3.8/#export-configuration","text":"","title":"Export Configuration "},{"location":"BLIS_User_Guide_v3.8/#test-catalog","text":"","title":"Test Catalog "},{"location":"BLIS_User_Guide_v3.8/#reports_1","text":"","title":"Reports "},{"location":"BLIS_User_Guide_v3.8/#backup-data","text":"The Backup Data feature was created for two reasons - to revert to a previously backed-up copy in cases of system failure, but also to create a backup file of the current laboratory patient data for uploading to a BLIS on Cloud version. For example, one intended use of the second scenario would be to upload the current laboratory data to the director's instantiation of BLIS. A conglomeration of multiple labs' data would permit the director to visualize larger trends in the healthcare data across several laboratories. This would aid the director in understanding the needs of individual labs, and permit them to mobilize aid catered to the specific needs of each laboratories. The below image is the default view of the Backup Data page.","title":"Backup Data "},{"location":"BLIS_User_Guide_v3.8/#backup-data-with-pre-existing-key","text":"If a public key has already been registered to the personnel account through the Lab Configuration > Manage Backup Keys functionality, then the key should appear in the drop-down menu. In the image below, my_pubkey is a pre-existing public key that had been previously registered. Please select the key from the drop-down menu.","title":"Backup Data with Pre-Existing Key"},{"location":"BLIS_User_Guide_v3.8/#backup-data-without-pre-existing-key","text":"If the desired public key has not already been registered to the account, then please select New Key... from the drop-down menu. Two new boxes should appear. Give the key a name (recommend either the lab name or lab ID), and click on the Browse button. Find the public key that was previously downloaded onto your computer and select it to upload. After selecting the public key of choice, please choose the desired backup (General or Anonymized) and then click Backup to trigger the data backup. A new page should pop up, confirming that the backup was successful. Please click the Download Zip hyperlink to download the zipped file to your Desktop. Additionally, if a Backup IP Address was previously set in Lab Configuration > BLIS Online page, a copy of the backup will be sent to the BLIS version hosted on the specified IP Address.","title":"Backup Data without Pre-Existing Key"},{"location":"BLIS_User_Guide_v3.8/#technician-overview","text":"","title":"Technician Overview "},{"location":"faq/","text":"Frequently Asked Questions Q: I'm using BLIS for Windows and everytime I try to run the executable, it crashes! What's going on? A : Ensure that the zipped files from the Runtime.zip are extracted directly into the BLIS directory. They should not remain in a Runtime folder. Q: I am trying out BLIS. How do I login? A : Please login using the credentials: testlab1_admin/admin123 (as admin) or testlab1_tech1, testlab1_tech2/tech123 (as lab technician). Q: How do I look up a patient in our system? A : Navigate to the Registration tab and search for the patient by name, number, or ID. Q: How do I add a new patient? A : To add a new patient, navigate to the Registration tab. Do not enter anything into the search bar and click 'Search'. You will see an option to add new patient appear. Click the link to proceed. Q: How do I add a new Specimen to a patient? A : After pulling open the patient's profile, click the 'Register New Specimen' hyperlink on the righthand side. Q: How do I configure BLIS to upload data to the central web instance [Manager View Only]? A : In the Manager view, naviate to the Lab Configuration Tab, and then BLIS Online. Enter in the IP address of the BLIS server. Q: How do I change the language of BLIS? A : You can change the language to either the English or French version by clicking on the preferred language in the footer menu. BLIS has several language options to cater to a diverse community, and we're still working to implement our changes in all of them! Thank you for your patience. Q: I'm logged in as an admin user but I want to work as a lab technician. How do I switch to the technician interface? A : The Work as Technician option can be selected from the top right side of the header next to the logout button. Q: What are the different lab tests that BLIS can be used for? A : The lab tests that BLIS can be used for are configured by your administrator, so they vary from lab to lab. Check with you local adminstrator for more information. Q: How do I add new BLIS users to the system? A : An administrator can add new users. The types of users can also be configured. To add a new user, you must be logged in as an adminstrator. Go the the Lab Configuration tab and select the User Accounts option (from this page you can also add new user types, e.g. technicians or administrators. Click on Add New Account and fill out the form that pops up to add a new user. Be sure to click the Add button, not Close at the bottom of the form. permissions.","title":"Frequently Asked Questions"},{"location":"faq/#frequently-asked-questions","text":"","title":"Frequently Asked Questions"},{"location":"faq/#q-im-using-blis-for-windows-and-everytime-i-try-to-run-the-executable-it-crashes-whats-going-on","text":"A : Ensure that the zipped files from the Runtime.zip are extracted directly into the BLIS directory. They should not remain in a Runtime folder.","title":"Q: I'm using BLIS for Windows and everytime I try to run the executable, it crashes! What's going on?"},{"location":"faq/#q-i-am-trying-out-blis-how-do-i-login","text":"A : Please login using the credentials: testlab1_admin/admin123 (as admin) or testlab1_tech1, testlab1_tech2/tech123 (as lab technician).","title":"Q: I am trying out BLIS. How do I login?"},{"location":"faq/#q-how-do-i-look-up-a-patient-in-our-system","text":"A : Navigate to the Registration tab and search for the patient by name, number, or ID.","title":"Q: How do I look up a patient in our system?"},{"location":"faq/#q-how-do-i-add-a-new-patient","text":"A : To add a new patient, navigate to the Registration tab. Do not enter anything into the search bar and click 'Search'. You will see an option to add new patient appear. Click the link to proceed.","title":"Q: How do I add a new patient?"},{"location":"faq/#q-how-do-i-add-a-new-specimen-to-a-patient","text":"A : After pulling open the patient's profile, click the 'Register New Specimen' hyperlink on the righthand side.","title":"Q: How do I add a new Specimen to a patient?"},{"location":"faq/#q-how-do-i-configure-blis-to-upload-data-to-the-central-web-instance-manager-view-only","text":"A : In the Manager view, naviate to the Lab Configuration Tab, and then BLIS Online. Enter in the IP address of the BLIS server.","title":"Q: How do I configure BLIS to upload data to the central web instance [Manager View Only]?"},{"location":"faq/#q-how-do-i-change-the-language-of-blis","text":"A : You can change the language to either the English or French version by clicking on the preferred language in the footer menu. BLIS has several language options to cater to a diverse community, and we're still working to implement our changes in all of them! Thank you for your patience.","title":"Q: How do I change the language of BLIS?"},{"location":"faq/#q-im-logged-in-as-an-admin-user-but-i-want-to-work-as-a-lab-technician-how-do-i-switch-to-the-technician-interface","text":"A : The Work as Technician option can be selected from the top right side of the header next to the logout button.","title":"Q: I'm logged in as an admin user but I want to work as a lab technician. How do I switch to the technician interface?"},{"location":"faq/#q-what-are-the-different-lab-tests-that-blis-can-be-used-for","text":"A : The lab tests that BLIS can be used for are configured by your administrator, so they vary from lab to lab. Check with you local adminstrator for more information.","title":"Q: What are the different lab tests that BLIS can be used for?"},{"location":"faq/#q-how-do-i-add-new-blis-users-to-the-system","text":"A : An administrator can add new users. The types of users can also be configured. To add a new user, you must be logged in as an adminstrator. Go the the Lab Configuration tab and select the User Accounts option (from this page you can also add new user types, e.g. technicians or administrators. Click on Add New Account and fill out the form that pops up to add a new user. Be sure to click the Add button, not Close at the bottom of the form. permissions.","title":"Q: How do I add new BLIS users to the system?"},{"location":"developer_documentation/blis_cloud/","text":"Running BLIS on a Cloud Provider There is experimental support for running BLIS on a cloud provider in the form of a Docker container! Quick Version Skip this section for step-by-step instructions on getting BLIS running. You must already have an account with a cloud provider to continue, and you must create a virtual machine running a relatively modern Linux distribution. For testing, Digital Ocean and the minimum-level $5/month droplet was used. You must install Docker Engine for the Linux distro you are running. You must install Docker Compose . Either V1 ( docker-compose ) or V2 ( docker compose ) will work, but for this example, docker-compose V1 will be used. Creating a Droplet You can follow the instructions on DigitalOcean to create a droplet here . Any Linux distribution should work, but for the purposes of this guide, it is assumed you will use Ubuntu. After creating the droplet, make sure you either note down the root user password you set, or you have an key configured for passwordless login. Follow the instructions here to connect to the droplet via SSH . Installing Docker When you are SSH'd into the droplet, in the terminal, run these commands to install Docker: sudo apt-get update sudo apt-get install ca-certificates curl gnupg lsb-release curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg \\ --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg echo \\ \"deb [arch= $( dpkg --print-architecture ) \\ signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] \\ https://download.docker.com/linux/ubuntu \\ $( lsb_release -cs ) stable\" | sudo tee \\ /etc/apt/sources.list.d/docker.list > /dev/null sudo apt-get update sudo apt-get install -y docker-ce docker-ce-cli containerd.io Install Docker Compose V1: sudo curl -L \"https://github.com/docker/compose/releases/download/1.29.2/docker-compose- $( uname -s ) - $( uname -m ) \" -o /usr/local/bin/docker-compose chmod +x /usr/local/bin/docker-compose Now you're ready to run BLIS! Running BLIS In the DigitalOcean Droplet via SSH, clone the BLIS repository: $ git clone https://github.com/c4g-spr22-blis/BLIS.git Change to the BLIS Docker directory $ cd BLIS/docker Initialize BLIS! $ docker-compose up -d These commands will set up two containers: The app container: This contains all of the BLIS source code, as well as the Apache2 web server and PHP 5.6 runtime. The db container: This contains the MySQL 5.7 database. The files inside the docker/database/ folder are executed when the container is created, providing the seed data that the BLIS database needs to start. Accessing BLIS Now, BLIS should be running. You can access it by visiting a URL that looks like: http://[your droplet IP address]/ Substitute your droplet IP address above - you should have this from SSHing into it. Upgrading BLIS When you want to upgrade BLIS, you can follow these commands to pull the latest version of the Docker image and restart the containers: $ docker-compose down $ docker-compose pull app $ docker-compose up -d And that's it! Adding an HTTPS certificate to BLIS By default, BLIS will only communicate over HTTP on port 80 (see docker/docker-compose.yml for the full port configuration.) BLIS includes support for automatically retrieving and configuring a certificate from Let's Encrypt for communicating over HTTPS. However, you must already have a domain configured and pointing at the host you are running BLIS on. This process is not included in this guide. If you are using DigitalOcean, there is a guide you can use as a jumping-off point here . After your domain is pointing to your BLIS host IP address You will need to add the BLIS_SERVER_NAME to the docker-compose.yml configuration: services: app: # This image is automatically built and pushed from the GitHub action in .github/workflows/ folder image: \"ghcr.io/c4g-spr22-blis/blis:latest\" environment: DB_HOST: 'db' DB_PORT: '3306' DB_USER: '[blis database user here]' DB_PASS: '[blis database password here]' # Add or uncomment this line, and change the domain value to your own BLIS_SERVER_NAME: 'blis.mydomain.com' Then, (re)start BLIS: # if BLIS is running $ docker-compose down # bring the database container up first and daemonize it $ docker-compose up -d db # bring the app container up alone, syncronously, so we can see the output $ docker-compose up app Make sure there are no errors in the output. The container will attempt to read the value of BLIS_SERVER_NAME and set the appropriate ServerName directive in the Apache2 web server configuration and a message will say that it is successful. Assuming it is successful, you can quit with Ctrl-C and restart as a background process ( docker-compose up -d app ). In a separate terminal window, while BLIS is running, run the script: $ docker-compose exec app get-https-cert.sh This will verify the environment configuration seems correct and execute the certificate tool for you! Answer the questions about the domain to the best of your knowledge. Once the domain is verified and the certificate installed, you can visit your BLIS instance with an https:// URL and hopefully it just works! Troubleshooting There maybe a error when you call docker-compose API, the error will show similar to: root@blis-test:~/BLIS/docker#docker-compose -bash: /usr/local/bin/docker-compose: Permission denied Using a chmod +x /usr/local/bin/docker-compose will help the work.","title":"Running BLIS on a Cloud Provider"},{"location":"developer_documentation/blis_cloud/#running-blis-on-a-cloud-provider","text":"There is experimental support for running BLIS on a cloud provider in the form of a Docker container!","title":"Running BLIS on a Cloud Provider"},{"location":"developer_documentation/blis_cloud/#quick-version","text":"Skip this section for step-by-step instructions on getting BLIS running. You must already have an account with a cloud provider to continue, and you must create a virtual machine running a relatively modern Linux distribution. For testing, Digital Ocean and the minimum-level $5/month droplet was used. You must install Docker Engine for the Linux distro you are running. You must install Docker Compose . Either V1 ( docker-compose ) or V2 ( docker compose ) will work, but for this example, docker-compose V1 will be used.","title":"Quick Version"},{"location":"developer_documentation/blis_cloud/#creating-a-droplet","text":"You can follow the instructions on DigitalOcean to create a droplet here . Any Linux distribution should work, but for the purposes of this guide, it is assumed you will use Ubuntu. After creating the droplet, make sure you either note down the root user password you set, or you have an key configured for passwordless login. Follow the instructions here to connect to the droplet via SSH .","title":"Creating a Droplet"},{"location":"developer_documentation/blis_cloud/#installing-docker","text":"When you are SSH'd into the droplet, in the terminal, run these commands to install Docker: sudo apt-get update sudo apt-get install ca-certificates curl gnupg lsb-release curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg \\ --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg echo \\ \"deb [arch= $( dpkg --print-architecture ) \\ signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] \\ https://download.docker.com/linux/ubuntu \\ $( lsb_release -cs ) stable\" | sudo tee \\ /etc/apt/sources.list.d/docker.list > /dev/null sudo apt-get update sudo apt-get install -y docker-ce docker-ce-cli containerd.io Install Docker Compose V1: sudo curl -L \"https://github.com/docker/compose/releases/download/1.29.2/docker-compose- $( uname -s ) - $( uname -m ) \" -o /usr/local/bin/docker-compose chmod +x /usr/local/bin/docker-compose Now you're ready to run BLIS!","title":"Installing Docker"},{"location":"developer_documentation/blis_cloud/#running-blis","text":"In the DigitalOcean Droplet via SSH, clone the BLIS repository: $ git clone https://github.com/c4g-spr22-blis/BLIS.git Change to the BLIS Docker directory $ cd BLIS/docker Initialize BLIS! $ docker-compose up -d These commands will set up two containers: The app container: This contains all of the BLIS source code, as well as the Apache2 web server and PHP 5.6 runtime. The db container: This contains the MySQL 5.7 database. The files inside the docker/database/ folder are executed when the container is created, providing the seed data that the BLIS database needs to start.","title":"Running BLIS"},{"location":"developer_documentation/blis_cloud/#accessing-blis","text":"Now, BLIS should be running. You can access it by visiting a URL that looks like: http://[your droplet IP address]/ Substitute your droplet IP address above - you should have this from SSHing into it.","title":"Accessing BLIS"},{"location":"developer_documentation/blis_cloud/#upgrading-blis","text":"When you want to upgrade BLIS, you can follow these commands to pull the latest version of the Docker image and restart the containers: $ docker-compose down $ docker-compose pull app $ docker-compose up -d And that's it!","title":"Upgrading BLIS"},{"location":"developer_documentation/blis_cloud/#adding-an-https-certificate-to-blis","text":"By default, BLIS will only communicate over HTTP on port 80 (see docker/docker-compose.yml for the full port configuration.) BLIS includes support for automatically retrieving and configuring a certificate from Let's Encrypt for communicating over HTTPS. However, you must already have a domain configured and pointing at the host you are running BLIS on. This process is not included in this guide. If you are using DigitalOcean, there is a guide you can use as a jumping-off point here .","title":"Adding an HTTPS certificate to BLIS"},{"location":"developer_documentation/blis_cloud/#after-your-domain-is-pointing-to-your-blis-host-ip-address","text":"You will need to add the BLIS_SERVER_NAME to the docker-compose.yml configuration: services: app: # This image is automatically built and pushed from the GitHub action in .github/workflows/ folder image: \"ghcr.io/c4g-spr22-blis/blis:latest\" environment: DB_HOST: 'db' DB_PORT: '3306' DB_USER: '[blis database user here]' DB_PASS: '[blis database password here]' # Add or uncomment this line, and change the domain value to your own BLIS_SERVER_NAME: 'blis.mydomain.com' Then, (re)start BLIS: # if BLIS is running $ docker-compose down # bring the database container up first and daemonize it $ docker-compose up -d db # bring the app container up alone, syncronously, so we can see the output $ docker-compose up app Make sure there are no errors in the output. The container will attempt to read the value of BLIS_SERVER_NAME and set the appropriate ServerName directive in the Apache2 web server configuration and a message will say that it is successful. Assuming it is successful, you can quit with Ctrl-C and restart as a background process ( docker-compose up -d app ). In a separate terminal window, while BLIS is running, run the script: $ docker-compose exec app get-https-cert.sh This will verify the environment configuration seems correct and execute the certificate tool for you! Answer the questions about the domain to the best of your knowledge. Once the domain is verified and the certificate installed, you can visit your BLIS instance with an https:// URL and hopefully it just works!","title":"After your domain is pointing to your BLIS host IP address"},{"location":"developer_documentation/blis_cloud/#troubleshooting","text":"There maybe a error when you call docker-compose API, the error will show similar to: root@blis-test:~/BLIS/docker#docker-compose -bash: /usr/local/bin/docker-compose: Permission denied Using a chmod +x /usr/local/bin/docker-compose will help the work.","title":"Troubleshooting"},{"location":"developer_documentation/data-structure/","text":"Database & Backup Structure Notes as I look into the database and structure of the databases, and the backups generated by the \"export\" function. BLIS Default Users/passwords Username Password Description cameroon_dir dir123 Director's view testlab1_admin admin123 Lab admin account testlab1_tech1 tech123 Lab tech account testlab1_tech2 tech123 Lab tech account Database Dumps In the BLIS download from the website, the MySQL tables are prepopulated with a structure. It's not clear if this can be recreated exactly from the various SQL files available in the data/ directory. So I dumped the databases using DBeaver and here they are: blis_12 blis_127 blis_revamp I can use this to seed a container image of BLIS on Linux.","title":"Database & Backup Structure"},{"location":"developer_documentation/data-structure/#database-backup-structure","text":"Notes as I look into the database and structure of the databases, and the backups generated by the \"export\" function.","title":"Database &amp; Backup Structure"},{"location":"developer_documentation/data-structure/#blis-default-userspasswords","text":"Username Password Description cameroon_dir dir123 Director's view testlab1_admin admin123 Lab admin account testlab1_tech1 tech123 Lab tech account testlab1_tech2 tech123 Lab tech account","title":"BLIS Default Users/passwords"},{"location":"developer_documentation/data-structure/#database-dumps","text":"In the BLIS download from the website, the MySQL tables are prepopulated with a structure. It's not clear if this can be recreated exactly from the various SQL files available in the data/ directory. So I dumped the databases using DBeaver and here they are: blis_12 blis_127 blis_revamp I can use this to seed a container image of BLIS on Linux.","title":"Database Dumps"},{"location":"developer_documentation/developer_guide_v0.1/","text":"C4G BLIS Developer Guide C4G Basic Laboratory Information System is a collaboration between Computing-for-Good (C4G) at Georgia Tech, the CDC, and participating PEPFAR countries. This doc will works as a supplement to BLIS_User_Guide.pdf , mainly to help developers quick ramp up on this repo and list out tips when contribute to this project. C4G BLIS Developer Guide Welcome Set up the dev envs Tools Test the envs Running environment Running on devcontainer Running on Windows Code directory and organization Deployment Welcome So welcome to this project! In this guide, we are going to go through the recommended tools, workflows and debug tips. Set up the dev envs Tools git Depending on your computer OS, there will be different step to setup git. You can refer to the official manual for git installation . Tips on install git On Windows, installing command-line tools can be done with a Windows package manager such as Scoop . On MacOS or Linux systems, installing tools can be done with package manager brew . VScode For IDE, we recommended using VSCode , which is a lightweight, opensource IDE. VSCode-Extension recommended to install: Remote-Containers Remote-WSL Docker Docker-compose Docker We will need Docker as the major tool in the development cycle. With the Docker application running, after installing the Remote-Containers and related extensions, we will be able to start the devcontainer which has been setup under /root/.devcontainer directory. What's devcontainer and why do we use it here? Devcontainers are a feature of Visual Studio Code that allow you to specify your development environment as a Docker container develop inside of it as if you were running the tools on your computer directly. The c4g-blis-spr22/BLIS repository has a .devcontainer configuration already specified, so you can develop BLIS on any computer that can run Docker and Visual Studio Code. Test the envs A quick way to test the dependencies installed correctly is: 1. Clone the BLIS repository to your computer: $ git clone https://github.com/c4g-spr22-blis/BLIS.git Open the folder in Visual Studio Code A pop-up that says something like \"This folder contains a devcontainer configuration\" will appear. Click the button to open the folder in a container. If that does not appear, open the command palette (Ctrl-Shift-P or Cmd-Shift-P) and find \"Open folder in container\" and select the BLIS folder. Once the container is started, the ports should forward automatically. You can see apache2 running if you click the \"Ports\" tab on the bottom (if the bottom panel is not open, use Ctrl-` (backtick) to open it) In this plot, you can see the terminal output, where the apache servers starts. In this plot, you can see the port, click the little earth button and then it will take you to the local hosted BLIS instance. You can then browse BLIS in your normal browser by visiting http://localhost:80 (substituting 80 for another port, depending on what port VS Code has mapped to apache2.) Log into the BLIS and start your exploration. Read the data structures site for (username, password) pairs, as well as data structures stored in database before diving in Running environment Running on devcontainer You can see more details on the Test the envs section. Running on Windows Aside by running BLIS on devcontainer , you can also try with running BLIS on Windows, where the BLIS was originally designed and developed on). This process will only require git to pull the code from github. BLIS was originally developed to run on Windows using a discontinued project called Server2Go. This packages Apache2, MySQL, PHP, and Firefox together into a package that can be run all at once on a desktop computer. See Also Design and Implementation of a Basic Laboratory Information System for Resource-Limited Settings Server2Go - Portable Web Server This is the primary way that end-users are still using BLIS. You can still run BLIS this way to develop it. Warning These instructions are subject to change. Clone the BLIS repository to your computer: $ git clone https://github.com/c4g-spr22-blis/BLIS.git Download the latest version of BLISRuntime.zip archive Unzip BLISRuntime.zip into the BLIS repository directory Run BLIS.exe The bundled Firefox will start and you can use BLIS normally, or make changes to files in the htdocs/ directory. Code directory and organization Deployment After you are satisfied with your new changes and want to deploy a newer version BLIS on cloud. In this doc, we will use DigitalOcean for the deployment platform as example. You will go through two main steps: Push & merge your changes to github repo. Based on ./github/workflows/release-docker.yml , the newest change will reflect in the ghcr.io/c4g-spr22-blis/blis:latest docker repo. Use the docker image to deploy BLIS service as well as database service. An step-by-step detailed instruction can be seen in this site","title":"C4G BLIS Developer Guide"},{"location":"developer_documentation/developer_guide_v0.1/#c4g-blis-developer-guide","text":"C4G Basic Laboratory Information System is a collaboration between Computing-for-Good (C4G) at Georgia Tech, the CDC, and participating PEPFAR countries. This doc will works as a supplement to BLIS_User_Guide.pdf , mainly to help developers quick ramp up on this repo and list out tips when contribute to this project. C4G BLIS Developer Guide Welcome Set up the dev envs Tools Test the envs Running environment Running on devcontainer Running on Windows Code directory and organization Deployment","title":"C4G BLIS Developer Guide"},{"location":"developer_documentation/developer_guide_v0.1/#welcome","text":"So welcome to this project! In this guide, we are going to go through the recommended tools, workflows and debug tips.","title":"Welcome"},{"location":"developer_documentation/developer_guide_v0.1/#set-up-the-dev-envs","text":"","title":"Set up the dev envs"},{"location":"developer_documentation/developer_guide_v0.1/#tools","text":"git Depending on your computer OS, there will be different step to setup git. You can refer to the official manual for git installation . Tips on install git On Windows, installing command-line tools can be done with a Windows package manager such as Scoop . On MacOS or Linux systems, installing tools can be done with package manager brew . VScode For IDE, we recommended using VSCode , which is a lightweight, opensource IDE. VSCode-Extension recommended to install: Remote-Containers Remote-WSL Docker Docker-compose Docker We will need Docker as the major tool in the development cycle. With the Docker application running, after installing the Remote-Containers and related extensions, we will be able to start the devcontainer which has been setup under /root/.devcontainer directory. What's devcontainer and why do we use it here? Devcontainers are a feature of Visual Studio Code that allow you to specify your development environment as a Docker container develop inside of it as if you were running the tools on your computer directly. The c4g-blis-spr22/BLIS repository has a .devcontainer configuration already specified, so you can develop BLIS on any computer that can run Docker and Visual Studio Code.","title":"Tools"},{"location":"developer_documentation/developer_guide_v0.1/#test-the-envs","text":"A quick way to test the dependencies installed correctly is: 1. Clone the BLIS repository to your computer: $ git clone https://github.com/c4g-spr22-blis/BLIS.git Open the folder in Visual Studio Code A pop-up that says something like \"This folder contains a devcontainer configuration\" will appear. Click the button to open the folder in a container. If that does not appear, open the command palette (Ctrl-Shift-P or Cmd-Shift-P) and find \"Open folder in container\" and select the BLIS folder. Once the container is started, the ports should forward automatically. You can see apache2 running if you click the \"Ports\" tab on the bottom (if the bottom panel is not open, use Ctrl-` (backtick) to open it) In this plot, you can see the terminal output, where the apache servers starts. In this plot, you can see the port, click the little earth button and then it will take you to the local hosted BLIS instance. You can then browse BLIS in your normal browser by visiting http://localhost:80 (substituting 80 for another port, depending on what port VS Code has mapped to apache2.) Log into the BLIS and start your exploration. Read the data structures site for (username, password) pairs, as well as data structures stored in database before diving in","title":"Test the envs"},{"location":"developer_documentation/developer_guide_v0.1/#running-environment","text":"","title":"Running environment"},{"location":"developer_documentation/developer_guide_v0.1/#running-on-devcontainer","text":"You can see more details on the Test the envs section.","title":"Running on devcontainer"},{"location":"developer_documentation/developer_guide_v0.1/#running-on-windows","text":"Aside by running BLIS on devcontainer , you can also try with running BLIS on Windows, where the BLIS was originally designed and developed on). This process will only require git to pull the code from github. BLIS was originally developed to run on Windows using a discontinued project called Server2Go. This packages Apache2, MySQL, PHP, and Firefox together into a package that can be run all at once on a desktop computer. See Also Design and Implementation of a Basic Laboratory Information System for Resource-Limited Settings Server2Go - Portable Web Server This is the primary way that end-users are still using BLIS. You can still run BLIS this way to develop it. Warning These instructions are subject to change. Clone the BLIS repository to your computer: $ git clone https://github.com/c4g-spr22-blis/BLIS.git Download the latest version of BLISRuntime.zip archive Unzip BLISRuntime.zip into the BLIS repository directory Run BLIS.exe The bundled Firefox will start and you can use BLIS normally, or make changes to files in the htdocs/ directory.","title":"Running on Windows"},{"location":"developer_documentation/developer_guide_v0.1/#code-directory-and-organization","text":"","title":"Code directory and organization"},{"location":"developer_documentation/developer_guide_v0.1/#deployment","text":"After you are satisfied with your new changes and want to deploy a newer version BLIS on cloud. In this doc, we will use DigitalOcean for the deployment platform as example. You will go through two main steps: Push & merge your changes to github repo. Based on ./github/workflows/release-docker.yml , the newest change will reflect in the ghcr.io/c4g-spr22-blis/blis:latest docker repo. Use the docker image to deploy BLIS service as well as database service. An step-by-step detailed instruction can be seen in this site","title":"Deployment"}]}